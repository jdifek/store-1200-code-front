"use client";
import React, { useState, useEffect } from "react";
import {
  Search,
  User,
  Scale,
  Heart,
  ShoppingCart,
  Grid3X3,
  ChevronDown,
  Filter,
  Star,
  Phone,
  Mail,
  MapPin,
} from "lucide-react";
import { Header } from "@/components/Header";
import Link from "next/link";
import Image from "next/image";
import { api } from "./api/http";

// Mock –¥–∞–Ω–Ω—ã–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –±—ç–∫–µ–Ω–¥–∞
const mockCategories = [
  {
    id: "1",
    name: "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã",
    count: 145,
    image: "/api/placeholder/200/150",
  },
  {
    id: "2",
    name: "–ü–æ–≥—Ä—É–∑—á–∏–∫–∏",
    count: 89,
    image: "/api/placeholder/200/150",
  },
  {
    id: "3",
    name: "–Å–º–∫–æ—Å—Ç–∏",
    count: 267,
    image: "/api/placeholder/200/150",
  },
  {
    id: "4",
    name: "–ê—Å–∏–∫–∏",
    count: 156,
    image: "/api/placeholder/200/150",
  },
];



const mockReviews = [
  {
    id: "1",
    content:
      "–ó–∞–º–æ–≤–ª—è–ª–∏ –∫–æ–º–ø–ª–µ–∫—Ç —Ö–æ–ª–æ–¥–∏–ª—å–Ω–æ–≥–æ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è –¥–ª—è –Ω–∞—à–æ–≥–æ —Å—É–ø–µ—Ä–º–∞—Ä–∫–µ—Ç—É. –Ø–∫—ñ—Å—Ç—å –≤—ñ–¥–º—ñ–Ω–Ω–∞, –º–æ–Ω—Ç–∞–∂ –ø—Ä–æ–≤–µ–ª–∏ —à–≤–∏–¥–∫–æ —Ç–∞ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–æ.",
    rating: 5,
    author: "–û–ª–µ–∫—Å—ñ–π –ü–µ—Ç—Ä–µ–Ω–∫–æ",
    company: "–ú–µ—Ä–µ–∂–∞ –ê–¢–ë",
    date: "2024-12-10",
  },
  {
    id: "2",
    name: "–ö—É–ø—É–≤–∞–ª–∏ —Ç–æ—Ä–≥–æ–≤—ñ –≤–∞–≥–∏ —Ç–∞ —Å—Ç–µ–ª–∞–∂—ñ. –í—Å–µ –ø—Ä–∞—Ü—é—î –±–µ–∑–¥–æ–≥–∞–Ω–Ω–æ, —Ü—ñ–Ω–∏ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω—ñ, –¥–æ—Å—Ç–∞–≤–∫–∞ –≤—á–∞—Å–Ω–æ.",
    rating: 5,
    author: "–ú–∞—Ä–∏–Ω–∞ –ö–æ–≤–∞–ª–µ–Ω–∫–æ",
    company: "–°—ñ–ª—å–ø–æ",
    date: "2024-12-08",
  },
];

const HomePage = () => {
  const [currentReview, setCurrentReview] = useState(0);
  const [cart, setCart] = useState<number[]>([]);
  const [products, setProducts] = useState<any[]>([]);

  // –°—á–∏—Ç—ã–≤–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    const storedCart = localStorage.getItem("cart");
    if (storedCart) {
      try {
        const parsed = JSON.parse(storedCart);
        // –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –º–∞—Å—Å–∏–≤
        if (Array.isArray(parsed)) {
          setCart(parsed);
        } else {
          setCart([]);
        }
      } catch {
        setCart([]);
      }
    }
  }, []);

  const handleCart = (id: number) => {
    let newCart: number[];

    if (cart.includes(id)) {
      // –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä —É–∂–µ –≤ –∫–æ—Ä–∑–∏–Ω–µ ‚Äî —É–±–∏—Ä–∞–µ–º
      newCart = cart.filter((item) => item !== id);
    } else {
      // –ï—Å–ª–∏ –Ω–µ—Ç ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º
      newCart = [...cart, id];
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º state –∏ localStorage
    setCart(newCart);
    localStorage.setItem("cart", JSON.stringify(newCart));
  };
  const formatPrice = (price: number) => {
    return new Intl.NumberFormat("uk-UA").format(price) + " ‚Ç¥";
  };

  const loadProducts = async () => {
    try {
      
      // üîß –ü–µ—Ä–µ–¥–∞—ë–º –Ω–∞–ø—Ä—è–º—É—é, –∞ –Ω–µ { params: query }
      const res: any = await api.get("/products/three-random");
  
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      setProducts(res.products || []);
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤:", err);
      setProducts([]);
    }
  };
  useEffect(() => {
    loadProducts();
  }, []);


  return (
    <div className="min-h-screen bg-white">
      {/* Hero Section */}
      <section className="bg-gradient-to-r from-green-50 to-green-100 py-16">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center max-w-4xl mx-auto">
            <h1 className="text-4xl lg:text-5xl font-bold text-gray-900 mb-6">
              –ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–µ —Ç–æ—Ä–≥–æ–≤–µ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è –¥–ª—è –≤–∞—à–æ–≥–æ –±—ñ–∑–Ω–µ—Å—É
            </h1>
            <p className="text-xl text-gray-600 mb-8">
              –•–æ–ª–æ–¥–∏–ª—å–Ω–µ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è, —Ç–æ—Ä–≥–æ–≤—ñ –≤–∞–≥–∏, —Å—Ç–µ–ª–∞–∂—ñ —Ç–∞ –≤—Å–µ –Ω–µ–æ–±—Ö—ñ–¥–Ω–µ –¥–ª—è
              —Å—É–ø–µ—Ä–º–∞—Ä–∫–µ—Ç—ñ–≤ –≤—ñ–¥ –ø—Ä–æ–≤—ñ–¥–Ω–∏—Ö –≤–∏—Ä–æ–±–Ω–∏–∫—ñ–≤
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <Link
                href="/catalog"
                className="bg-green-800 cursor-pointer text-white px-8 py-3 rounded-lg font-semibold hover:bg-green-900 transition-colors"
              >
                –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∫–∞—Ç–∞–ª–æ–≥
              </Link>
              <Link
                href="/about"
                className="border cursor-pointer border-green-800 text-green-800 px-8 py-3 rounded-lg font-semibold hover:bg-green-800 hover:text-white transition-colors"
              >
                –û—Ç—Ä–∏–º–∞—Ç–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é
              </Link>
            </div>
          </div>
        </div>
      </section>

      {/* Categories Grid */}
      <section className="py-16">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            {mockCategories.map((category) => (
              <Link
                href={"/catalog"}
                key={category.id}
                className="group cursor-pointer"
              >
                <div className="bg-gray-100 rounded-lg overflow-hidden mb-4 aspect-[4/3] flex items-center justify-center">
                  <div className="text-6xl text-gray-400">üì¶</div>
                </div>
                <h3 className="font-semibold text-gray-900 mb-1 group-hover:text-green-800 transition-colors text-center text-sm uppercase tracking-wide">
                  {category.name}
                </h3>
              </Link>
            ))}
          </div>
        </div>
      </section>

      {/* Products Section */}
      <section className="py-12 sm:py-16 bg-gray-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ + —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ */}
          <div className="flex flex-col sm:flex-row sm:justify-between sm:items-center mb-8 space-y-4 sm:space-y-0">
            <div>
              <h2 className="text-2xl font-bold !text-gray-900 mb-2">
                –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω—ñ —Ç–æ–≤–∞—Ä–∏
              </h2>
              <p className="!text-gray-700 text-sm sm:text-base">
                –ù–∞–π–ø–æ–ø—É–ª—è—Ä–Ω—ñ—à—ñ —Ä—ñ—à–µ–Ω–Ω—è –¥–ª—è —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è
              </p>
            </div>

            <div className="flex flex-col sm:flex-row sm:items-center sm:space-x-4 space-y-3 sm:space-y-0">
              {/* <span className="text-sm !text-gray-700 text-center sm:text-left">
                –ó–Ω–∞–π–¥–µ–Ω–æ: <strong className="!text-gray-900">156</strong>{" "}
                —Ç–æ–≤–∞—Ä—ñ–≤
              </span> */}

              {/* <div className="flex items-center justify-center space-x-2">
                <span className="text-sm !text-gray-700">–°–æ—Ä—Ç—É–≤–∞—Ç–∏:</span>
                <select className="border border-gray-300 rounded px-3 py-1.5 text-sm !text-gray-800 focus:outline-none focus:ring-2 focus:ring-green-600">
                  <option>–ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º</option>
                  <option>–ó–∞ —Ü—ñ–Ω–æ—é ‚Üë</option>
                  <option>–ó–∞ —Ü—ñ–Ω–æ—é ‚Üì</option>
                  <option>–ó–∞ —Ä–µ–π—Ç–∏–Ω–≥–æ–º</option>
                </select>
              </div> */}
            </div>
          </div>

          {/* –°–µ—Ç–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ */}
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 sm:gap-8">
            {products.map((product) => (
              <div
                key={product.id}
                className="bg-white rounded-lg shadow-sm hover:shadow-md transition-shadow group"
              >
                {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ */}
                <div className="relative">
                  <div className="relative aspect-[4/3] bg-gray-100 rounded-t-lg overflow-hidden">
                    <Link href={`/product/${product.id}`}>
                      {product.images ? (
                        <Image
                          alt={product.name}
                          src={product.images?.[0]?.url}
                          fill
                          className="object-cover transition-transform duration-300 group-hover:scale-105 cursor-pointer"
                        />
                      ) : (
                        <div className="flex items-center justify-center w-full h-full cursor-pointer">
                          <div className="text-4xl !text-gray-400">üì¶</div>
                        </div>
                      )}
                    </Link>
                  </div>

                  {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
                  {/* <div className="absolute top-3 left-3 flex space-x-2">
                    <button className="p-1.5 bg-white rounded-full shadow hover:bg-gray-50 transition-colors">
                      <Scale size={14} className="!text-gray-600" />
                    </button>
                    <button className="p-1.5 bg-white rounded-full shadow hover:bg-gray-50 transition-colors">
                      <Heart size={14} className="!text-gray-600" />
                    </button>
                  </div> */}

                  {/* –°–∫–∏–¥–∫–∞ */}
                  {product.discount && (
                    <span className="absolute top-3 right-3 bg-yellow-400 !text-black px-2 py-1 rounded text-xs font-semibold">
                      -{product.discount}%
                    </span>
                  )}
                </div>

                {/* –û–ø–∏—Å–∞–Ω–∏–µ –∏ —Ü–µ–Ω–∞ */}
                <div className="p-5 sm:p-6">
                  {/* –†–µ–π—Ç–∏–Ω–≥ */}
                  {/* <div className="flex items-center mb-2">
                    <div className="flex items-center">
                      {[...Array(5)].map((_, i) => (
                        <Star
                          key={i}
                          size={14}
                          className={`${
                            i < product.rating
                              ? "!text-yellow-400 fill-current"
                              : "!text-gray-300"
                          }`}
                        />
                      ))}
                    </div>
                    <span className="text-xs !text-gray-600 ml-2">
                      {product.reviews} –≤—ñ–¥–≥—É–∫—ñ–≤
                    </span>
                  </div> */}

                  {/* –ù–∞–∑–≤–∞–Ω–∏–µ */}
                  <Link href={`/product/${product.id}`}>
                    <h3 className="font-semibold !text-gray-900 mb-4 group-hover:!text-green-800 transition-colors text-sm sm:text-base line-clamp-2 cursor-pointer">
                      {product.name}
                    </h3>
                  </Link>

                  {/* –¶–µ–Ω–∞ –∏ –∫–Ω–æ–ø–∫–∞ */}
                  <div className="flex items-center justify-between">
                    <div>
                      <div className="text-lg sm:text-xl font-bold !text-gray-900">
                        {formatPrice(product.price)}
                      </div>
                      {product.oldPrice && (
                        <div className="text-sm !text-gray-500 line-through">
                          {formatPrice(product.oldPrice)}
                        </div>
                      )}
                    </div>
                    <button
                      onClick={() => handleCart(product.id)}
                      className={`${
                        cart.includes(product.id)
                          ? "bg-red-800 hover:bg-red-900"
                          : "bg-green-800 hover:bg-green-900"
                      } text-white cursor-pointer px-4 py-2 rounded-lg text-sm font-medium  transition-colors whitespace-nowrap`}
                    >
                      {cart.includes(+product.id)
                        ? "–ü—Ä–∏–±—Ä–∞—Ç–∏ –∑ –∫–æ—à–∏–∫–∞"
                        : "–í –∫–æ—à–∏–∫"}
                    </button>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Reviews Section */}
      <section className="py-16">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold text-gray-900 mb-4">
              –í—ñ–¥–≥—É–∫–∏ –Ω–∞—à–∏—Ö –∫–ª—ñ—î–Ω—Ç—ñ–≤
            </h2>
            <p className="text-gray-600 max-w-2xl mx-auto">
              –î–æ–≤—ñ—Ä–∞ –ø—Ä–æ–≤—ñ–¥–Ω–∏—Ö —Ç–æ—Ä–≥–æ–≤–∏—Ö –º–µ—Ä–µ–∂ –£–∫—Ä–∞—ó–Ω–∏
            </p>
          </div>

          <div className="max-w-4xl mx-auto">
            <div className="bg-gray-50 rounded-lg p-8">
              <div className="flex items-center mb-4">
                {[...Array(5)].map((_, i) => (
                  <Star
                    key={i}
                    className="text-yellow-400 fill-current"
                    size={20}
                  />
                ))}
              </div>
              <blockquote className="text-lg text-gray-800 mb-6 italic">
                "{mockReviews[currentReview].content}"
              </blockquote>
              <div className="flex items-center">
                <div className="w-12 h-12 bg-green-800 rounded-full flex items-center justify-center text-white font-semibold mr-4">
                  {mockReviews[currentReview].author.charAt(0)}
                </div>
                <div>
                  <div className="font-semibold text-gray-900">
                    {mockReviews[currentReview].author}
                  </div>
                  <div className="text-gray-600 text-sm">
                    {mockReviews[currentReview].company}
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-16 bg-green-800 text-white">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
          <h2 className="text-3xl font-bold mb-4">
            –ü–æ—Ç—Ä—ñ–±–Ω–∞ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è?
          </h2>
          <p className="text-xl mb-8 text-green-100 max-w-2xl mx-auto">
            –ù–∞—à—ñ –µ–∫—Å–ø–µ—Ä—Ç–∏ –¥–æ–ø–æ–º–æ–∂—É—Ç—å –ø—ñ–¥—ñ–±—Ä–∞—Ç–∏ –æ–ø—Ç–∏–º–∞–ª—å–Ω–µ —Ä—ñ—à–µ–Ω–Ω—è –¥–ª—è –≤–∞—à–æ–≥–æ
            —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –æ–±'—î–∫—Ç–∞
          </p>
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <button className="bg-white text-green-800 px-8 py-3 rounded-lg font-semibold hover:bg-gray-100 transition-colors">
              –ó–∞–º–æ–≤–∏—Ç–∏ –¥–∑–≤—ñ–Ω–æ–∫
            </button>
            <button className="border border-white text-white px-8 py-3 rounded-lg font-semibold hover:bg-white hover:text-green-800 transition-colors">
              –û–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è
            </button>
          </div>
        </div>
      </section>
    </div>
  );
};

export default HomePage;
